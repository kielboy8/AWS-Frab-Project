AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'frab-api

  Sample SAM Template for frab-api

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  BookingQueueExpiration:
    Type: Number
    Default: 120
  DefaultRegion:
    Type: String
    Default: ap-southeast-1
Resources:
  FrabApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: LambdaTokenAuthorizerFunction
        Authorizers:
          LambdaTokenAuthorizerFunction:
            FunctionArn:
              Fn::GetAtt:
              - LambdaTokenAuthorizerFunction
              - Arn
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: 401
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: '''WWW-Authenticate'''
              Access-Control-Allow-Origin: '''*'''
              WWW-Authenticate: '''Authorization'''
  LambdaTokenAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/ff5c07e6472701c8cc6a0cb31c17a4eb
      Handler: app.handler
      Runtime: nodejs10.x
  GetRidesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/e67c996c387d40b9a39fc9f4c20cba40
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/rides/
            Method: get
            RestApiId:
              Ref: FrabApi
  BookingQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      QueueName: BookingQueue.fifo
      FifoQueue: true
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 1
      MessageRetentionPeriod:
        Ref: BookingQueueExpiration
  GetRideFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/b91a45ba96f1a715efdf9f0106681d73
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /rides/{rideId}
            Method: get
            RestApiId:
              Ref: FrabApi
  BookRideFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/8506bb9cb8a5c13c06a4ab7df583e86f
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /rides
            Method: post
            RestApiId:
              Ref: FrabApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RidesTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - BookingQueue
            - QueueName
      Environment:
        Variables:
          DEFAULT_REGION:
            Ref: DefaultRegion
          BOOKING_QUEUE:
            Ref: BookingQueue
          RIDES_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - RidesTable
                - Arn
  AcceptRideRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/0f7f09004455d46c878b581cee0c85b8
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/rides/{rideId}
            Method: put
            RestApiId:
              Ref: FrabApi
  LocationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frab-api-artifact/6fafb0ce6a02c2eb2bff65cff2da2d4a
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        Location:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/locations
            Method: put
            RestApiId:
              Ref: FrabApi
  RidesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: ride_id
        AttributeType: S
      KeySchema:
      - AttributeName: ride_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
Outputs:
  FrabApi:
    Description: API Gateway endpoint URL for Prod stage for Book Ride function
    Value:
      Fn::Sub: https://${FrabApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/rides/
  BookRideFunction:
    Description: BookRideFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - BookRideFunction
      - Arn
  BookRideFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - BookRideFunctionRole
      - Arn
