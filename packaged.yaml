AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'frab-api

  Sample SAM Template for frab-api

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  BookingQueueExpiration:
    Type: Number
    Default: 120
  DefaultRegion:
    Type: String
    Default: ap-southeast-1
Resources:
  GetRidesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://kiel-api-bucket/6af24402116c0b2bd8204a2d3f277f19
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/rides/
            Method: get
      Environment:
        Variables:
          DEFAULT_REGION:
            Ref: DefaultRegion
          BOOKING_QUEUE:
            Ref: BookingQueue
      Policies:
      - SQSPollerPolicy:
          QueueName:
            Fn::GetAtt:
            - BookingQueue
            - QueueName
  BookingQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      QueueName: BookingQueue.fifo
      FifoQueue: true
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 1
      MessageRetentionPeriod:
        Ref: BookingQueueExpiration
  GetRideFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://kiel-api-bucket/20e96b4404664317d764f3f015b1b15a
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /rides/{rideId}
            Method: get
      Environment:
        Variables:
          DEFAULT_REGION:
            Ref: DefaultRegion
          RIDES_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - RidesTable
                - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RidesTable
  BookRideFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://kiel-api-bucket/b07cfabf18251075268259a95fa16d30
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /rides
            Method: post
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RidesTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - BookingQueue
            - QueueName
      Environment:
        Variables:
          DEFAULT_REGION:
            Ref: DefaultRegion
          BOOKING_QUEUE:
            Ref: BookingQueue
          RIDES_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - RidesTable
                - Arn
  AcceptRideRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://kiel-api-bucket/8d080493bce5d69643e742d7a406518d
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        FrabApi:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/rides/{rideId}
            Method: put
      Environment:
        Variables:
          DEFAULT_REGION:
            Ref: DefaultRegion
          RIDES_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - RidesTable
                - Arn
          DRIVERS_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - DriversTable
                - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RidesTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DriversTable
  LocationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://kiel-api-bucket/a4d97e7d3417c506ac61aae5b4b48472
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        Location:
          Type: Api
          Properties:
            Path: /drivers/{driverId}/locations
            Method: put
      Environment:
        Variables:
          DRIVERS_TABLE:
            Fn::Select:
            - 1
            - Fn::Split:
              - /
              - Fn::GetAtt:
                - DriversTable
                - Arn
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: DriversTable
  RidesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: ride_id
        AttributeType: S
      KeySchema:
      - AttributeName: ride_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  DriversTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: driver_id
        AttributeType: S
      KeySchema:
      - AttributeName: driver_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
Outputs:
  FrabApi:
    Description: API Gateway endpoint URL for Prod stage for Book Ride function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/rides/
  BookRideFunction:
    Description: BookRideFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - BookRideFunction
      - Arn
  BookRideFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - BookRideFunctionRole
      - Arn
